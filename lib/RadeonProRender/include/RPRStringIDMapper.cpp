
#include "RPRStringIDMapper.h"

#include <algorithm>
#include <cctype>
#include <string>
#include <functional>


RPRStringIDMapper::RPRStringIDMapper()
{

	#define MACRO_LINK_STR_ID(s,i)  m_RPRMaterialInput_string_to_id[s]=i;  m_RPRMaterialInput_id_to_string[i]=s  ;


	//
	// MAKE SURE ALL STRINGS ARE IN LOWER CASE ONLY
	//

	MACRO_LINK_STR_ID("color",RPR_MATERIAL_INPUT_COLOR);
	MACRO_LINK_STR_ID("color0",RPR_MATERIAL_INPUT_COLOR0);
	MACRO_LINK_STR_ID("color1",RPR_MATERIAL_INPUT_COLOR1);
	MACRO_LINK_STR_ID("color2",RPR_MATERIAL_INPUT_COLOR2);
	MACRO_LINK_STR_ID("color3",RPR_MATERIAL_INPUT_COLOR3);
	MACRO_LINK_STR_ID("normal",RPR_MATERIAL_INPUT_NORMAL);
	MACRO_LINK_STR_ID("uv",RPR_MATERIAL_INPUT_UV);
	MACRO_LINK_STR_ID("data",RPR_MATERIAL_INPUT_DATA);
	MACRO_LINK_STR_ID("roughness",RPR_MATERIAL_INPUT_ROUGHNESS);
	MACRO_LINK_STR_ID("ior",RPR_MATERIAL_INPUT_IOR);
	MACRO_LINK_STR_ID("roughness_x",RPR_MATERIAL_INPUT_ROUGHNESS_X);
	MACRO_LINK_STR_ID("roughness_y",RPR_MATERIAL_INPUT_ROUGHNESS_Y);
	MACRO_LINK_STR_ID("rotation",RPR_MATERIAL_INPUT_ROTATION);
	MACRO_LINK_STR_ID("weight",RPR_MATERIAL_INPUT_WEIGHT);
	MACRO_LINK_STR_ID("op",RPR_MATERIAL_INPUT_OP);
	MACRO_LINK_STR_ID("invec",RPR_MATERIAL_INPUT_INVEC);
	MACRO_LINK_STR_ID("uv_scale",RPR_MATERIAL_INPUT_UV_SCALE);
	MACRO_LINK_STR_ID("value",RPR_MATERIAL_INPUT_VALUE);
	MACRO_LINK_STR_ID("reflectance",RPR_MATERIAL_INPUT_REFLECTANCE);
	MACRO_LINK_STR_ID("bumpscale",RPR_MATERIAL_INPUT_SCALE);
	MACRO_LINK_STR_ID("sigmas",RPR_MATERIAL_INPUT_SCATTERING);
	MACRO_LINK_STR_ID("sigmaa",RPR_MATERIAL_INPUT_ABSORBTION);
	MACRO_LINK_STR_ID("emission",RPR_MATERIAL_INPUT_EMISSION);
	MACRO_LINK_STR_ID("g",RPR_MATERIAL_INPUT_G);
	MACRO_LINK_STR_ID("multiscatter",RPR_MATERIAL_INPUT_MULTISCATTER);
	MACRO_LINK_STR_ID("anisotropic",RPR_MATERIAL_INPUT_ANISOTROPIC);
	MACRO_LINK_STR_ID("frontface",RPR_MATERIAL_INPUT_FRONTFACE);
	MACRO_LINK_STR_ID("backface",RPR_MATERIAL_INPUT_BACKFACE);
	MACRO_LINK_STR_ID("origin",RPR_MATERIAL_INPUT_ORIGIN);
	MACRO_LINK_STR_ID("zaxis",RPR_MATERIAL_INPUT_ZAXIS);
	MACRO_LINK_STR_ID("xaxis",RPR_MATERIAL_INPUT_XAXIS);
	MACRO_LINK_STR_ID("threshold",RPR_MATERIAL_INPUT_THRESHOLD);
	MACRO_LINK_STR_ID("offset",RPR_MATERIAL_INPUT_OFFSET);
	MACRO_LINK_STR_ID("uv_type",RPR_MATERIAL_INPUT_UV_TYPE);
	MACRO_LINK_STR_ID("radius",RPR_MATERIAL_INPUT_RADIUS);
	MACRO_LINK_STR_ID("side",RPR_MATERIAL_INPUT_SIDE);
	MACRO_LINK_STR_ID("caustics",RPR_MATERIAL_INPUT_CAUSTICS);
	MACRO_LINK_STR_ID("transmission_color",RPR_MATERIAL_INPUT_TRANSMISSION_COLOR);
	MACRO_LINK_STR_ID("thickness",RPR_MATERIAL_INPUT_THICKNESS);
	MACRO_LINK_STR_ID("input0",RPR_MATERIAL_INPUT_0);
	MACRO_LINK_STR_ID("input1",RPR_MATERIAL_INPUT_1);
	MACRO_LINK_STR_ID("input2",RPR_MATERIAL_INPUT_2);
	MACRO_LINK_STR_ID("input3",RPR_MATERIAL_INPUT_3);
	MACRO_LINK_STR_ID("input4",RPR_MATERIAL_INPUT_4);
	MACRO_LINK_STR_ID("schlickapprox",RPR_MATERIAL_INPUT_SCHLICK_APPROXIMATION);
	MACRO_LINK_STR_ID("applysurface",RPR_MATERIAL_INPUT_APPLYSURFACE);
	
	
	//
	//list of RPR_MATERIAL_INPUT_UBER_ from RPRHybrid
	//
	MACRO_LINK_STR_ID("uberv2.diffuse_color",RPR_MATERIAL_INPUT_UBER_DIFFUSE_COLOR);
	MACRO_LINK_STR_ID("uberv2.diffuse_roughness",RPR_MATERIAL_INPUT_UBER_DIFFUSE_ROUGHNESS);
	MACRO_LINK_STR_ID("uberv2.diffuse_normal",RPR_MATERIAL_INPUT_UBER_DIFFUSE_NORMAL);
	MACRO_LINK_STR_ID("uberv2.diffuse_weight",RPR_MATERIAL_INPUT_UBER_DIFFUSE_WEIGHT);
	MACRO_LINK_STR_ID("uberv2.reflection_color",RPR_MATERIAL_INPUT_UBER_REFLECTION_COLOR);
	MACRO_LINK_STR_ID("uberv2.reflection_roughness",RPR_MATERIAL_INPUT_UBER_REFLECTION_ROUGHNESS);
	MACRO_LINK_STR_ID("uberv2.reflection_anisotropy",RPR_MATERIAL_INPUT_UBER_REFLECTION_ANISOTROPY);
	MACRO_LINK_STR_ID("uberv2.reflection_anysotropy_rotation",RPR_MATERIAL_INPUT_UBER_REFLECTION_ANISOTROPY_ROTATION);
	MACRO_LINK_STR_ID("uberv2.reflection_mode",RPR_MATERIAL_INPUT_UBER_REFLECTION_MODE);
	MACRO_LINK_STR_ID("uberv2.reflection_ior",RPR_MATERIAL_INPUT_UBER_REFLECTION_IOR);
	MACRO_LINK_STR_ID("uberv2.reflection_metalness",RPR_MATERIAL_INPUT_UBER_REFLECTION_METALNESS);
	MACRO_LINK_STR_ID("uberv2.reflection_weight",RPR_MATERIAL_INPUT_UBER_REFLECTION_WEIGHT);
	MACRO_LINK_STR_ID("uberv2.refraction_color",RPR_MATERIAL_INPUT_UBER_REFRACTION_COLOR);
	MACRO_LINK_STR_ID("uberv2.refraction_roughness",RPR_MATERIAL_INPUT_UBER_REFRACTION_ROUGHNESS);
	MACRO_LINK_STR_ID("uberv2.refraction_ior",RPR_MATERIAL_INPUT_UBER_REFRACTION_IOR);
	MACRO_LINK_STR_ID("uberv2.refraction_thin_surface",RPR_MATERIAL_INPUT_UBER_REFRACTION_THIN_SURFACE);
	MACRO_LINK_STR_ID("uberv2.refraction_weight",RPR_MATERIAL_INPUT_UBER_REFRACTION_WEIGHT);
	MACRO_LINK_STR_ID("uberv2.coating_color",RPR_MATERIAL_INPUT_UBER_COATING_COLOR);
	MACRO_LINK_STR_ID("uberv2.coating_roughness",RPR_MATERIAL_INPUT_UBER_COATING_ROUGHNESS);
	MACRO_LINK_STR_ID("uberv2.coating_mode",RPR_MATERIAL_INPUT_UBER_COATING_MODE);
	MACRO_LINK_STR_ID("uberv2.coating_ior",RPR_MATERIAL_INPUT_UBER_COATING_IOR);
	MACRO_LINK_STR_ID("uberv2.coating_metalness",RPR_MATERIAL_INPUT_UBER_COATING_METALNESS);
	MACRO_LINK_STR_ID("uberv2.coating_normal",RPR_MATERIAL_INPUT_UBER_COATING_NORMAL);
	MACRO_LINK_STR_ID("uberv2.coating_weight",RPR_MATERIAL_INPUT_UBER_COATING_WEIGHT);
	MACRO_LINK_STR_ID("uberv2.emission_color",RPR_MATERIAL_INPUT_UBER_EMISSION_COLOR);
	MACRO_LINK_STR_ID("uberv2.emission_weight",RPR_MATERIAL_INPUT_UBER_EMISSION_WEIGHT);
	MACRO_LINK_STR_ID("uberv2.transparency",RPR_MATERIAL_INPUT_UBER_TRANSPARENCY);
	
	//
	// list of RPR_MATERIAL_INPUT_UBER_ from RPR-Tahoe
	//
	MACRO_LINK_STR_ID("diffuse.color",RPR_MATERIAL_INPUT_UBER_DIFFUSE_COLOR);
	MACRO_LINK_STR_ID("diffuse.weight",RPR_MATERIAL_INPUT_UBER_DIFFUSE_WEIGHT);
	MACRO_LINK_STR_ID("diffuse.roughness",RPR_MATERIAL_INPUT_UBER_DIFFUSE_ROUGHNESS);
	MACRO_LINK_STR_ID("diffuse.normal",RPR_MATERIAL_INPUT_UBER_DIFFUSE_NORMAL);
	MACRO_LINK_STR_ID("reflection.color",RPR_MATERIAL_INPUT_UBER_REFLECTION_COLOR);
	MACRO_LINK_STR_ID("reflection.weight",RPR_MATERIAL_INPUT_UBER_REFLECTION_WEIGHT);
	MACRO_LINK_STR_ID("reflection.roughness",RPR_MATERIAL_INPUT_UBER_REFLECTION_ROUGHNESS);
	MACRO_LINK_STR_ID("reflection.anisotropy",RPR_MATERIAL_INPUT_UBER_REFLECTION_ANISOTROPY);
	MACRO_LINK_STR_ID("reflection.anistropyrotation",RPR_MATERIAL_INPUT_UBER_REFLECTION_ANISOTROPY_ROTATION);
	MACRO_LINK_STR_ID("reflection.mode",RPR_MATERIAL_INPUT_UBER_REFLECTION_MODE);
	MACRO_LINK_STR_ID("reflection.ior",RPR_MATERIAL_INPUT_UBER_REFLECTION_IOR);
	MACRO_LINK_STR_ID("reflection.metalness",RPR_MATERIAL_INPUT_UBER_REFLECTION_METALNESS);
	MACRO_LINK_STR_ID("reflection.normal",RPR_MATERIAL_INPUT_UBER_REFLECTION_NORMAL);
	MACRO_LINK_STR_ID("refraction.color",RPR_MATERIAL_INPUT_UBER_REFRACTION_COLOR);
	MACRO_LINK_STR_ID("refraction.weight",RPR_MATERIAL_INPUT_UBER_REFRACTION_WEIGHT);
	MACRO_LINK_STR_ID("refraction.roughness",RPR_MATERIAL_INPUT_UBER_REFRACTION_ROUGHNESS);
	MACRO_LINK_STR_ID("refraction.ior",RPR_MATERIAL_INPUT_UBER_REFRACTION_IOR);
	MACRO_LINK_STR_ID("refraction.normal",RPR_MATERIAL_INPUT_UBER_REFRACTION_NORMAL);
	MACRO_LINK_STR_ID("refraction.thinsurface",RPR_MATERIAL_INPUT_UBER_REFRACTION_THIN_SURFACE);
	MACRO_LINK_STR_ID("refraction.absorptioncolor",RPR_MATERIAL_INPUT_UBER_REFRACTION_ABSORPTION_COLOR);
	MACRO_LINK_STR_ID("refraction.absorptiondistance",RPR_MATERIAL_INPUT_UBER_REFRACTION_ABSORPTION_DISTANCE);
	MACRO_LINK_STR_ID("refraction.caustics",RPR_MATERIAL_INPUT_UBER_REFRACTION_CAUSTICS);
	MACRO_LINK_STR_ID("coating.color",RPR_MATERIAL_INPUT_UBER_COATING_COLOR);
	MACRO_LINK_STR_ID("coating.weight",RPR_MATERIAL_INPUT_UBER_COATING_WEIGHT);
	MACRO_LINK_STR_ID("coating.roughness",RPR_MATERIAL_INPUT_UBER_COATING_ROUGHNESS);
	MACRO_LINK_STR_ID("coating.mode",RPR_MATERIAL_INPUT_UBER_COATING_MODE);
	MACRO_LINK_STR_ID("coating.ior",RPR_MATERIAL_INPUT_UBER_COATING_IOR);
	MACRO_LINK_STR_ID("coating.metalness",RPR_MATERIAL_INPUT_UBER_COATING_METALNESS);
	MACRO_LINK_STR_ID("coating.normal",RPR_MATERIAL_INPUT_UBER_COATING_NORMAL);
	MACRO_LINK_STR_ID("coating.transmissioncolor",RPR_MATERIAL_INPUT_UBER_COATING_TRANSMISSION_COLOR);
	MACRO_LINK_STR_ID("coating.thickness",RPR_MATERIAL_INPUT_UBER_COATING_THICKNESS);
	MACRO_LINK_STR_ID("sheen",RPR_MATERIAL_INPUT_UBER_SHEEN);
	MACRO_LINK_STR_ID("sheen.tint",RPR_MATERIAL_INPUT_UBER_SHEEN_TINT);
	MACRO_LINK_STR_ID("sheen.weight",RPR_MATERIAL_INPUT_UBER_SHEEN_WEIGHT);
	MACRO_LINK_STR_ID("emission.color",RPR_MATERIAL_INPUT_UBER_EMISSION_COLOR);
	MACRO_LINK_STR_ID("emission.weight",RPR_MATERIAL_INPUT_UBER_EMISSION_WEIGHT);
	MACRO_LINK_STR_ID("emission.mode",RPR_MATERIAL_INPUT_UBER_EMISSION_MODE);
	MACRO_LINK_STR_ID("transparency",RPR_MATERIAL_INPUT_UBER_TRANSPARENCY);
	MACRO_LINK_STR_ID("sss.scattercolor",RPR_MATERIAL_INPUT_UBER_SSS_SCATTER_COLOR);
	MACRO_LINK_STR_ID("sss.scatterdistance",RPR_MATERIAL_INPUT_UBER_SSS_SCATTER_DISTANCE);
	MACRO_LINK_STR_ID("sss.scatterdirection",RPR_MATERIAL_INPUT_UBER_SSS_SCATTER_DIRECTION);
	MACRO_LINK_STR_ID("sss.weight",RPR_MATERIAL_INPUT_UBER_SSS_WEIGHT);
	MACRO_LINK_STR_ID("sss.multiscatter",RPR_MATERIAL_INPUT_UBER_SSS_MULTISCATTER);
	MACRO_LINK_STR_ID("backscatter.weight",RPR_MATERIAL_INPUT_UBER_BACKSCATTER_WEIGHT);
	MACRO_LINK_STR_ID("backscatter.color",RPR_MATERIAL_INPUT_UBER_BACKSCATTER_COLOR);
	MACRO_LINK_STR_ID("schlickapprox",RPR_MATERIAL_INPUT_UBER_FRESNEL_SCHLICK_APPROXIMATION);




	#undef MACRO_LINK_STR_ID
	#define MACRO_LINK_STR_ID(s,i)  m_RPRContextInput_string_to_id[s]=i;  m_RPRContextInput_id_to_string[i]=s  ;

	MACRO_LINK_STR_ID("iterations",RPR_CONTEXT_ITERATIONS);
	MACRO_LINK_STR_ID("imagefilter.type",RPR_CONTEXT_IMAGE_FILTER_TYPE);
	MACRO_LINK_STR_ID("imagefilter.box.radius",RPR_CONTEXT_IMAGE_FILTER_BOX_RADIUS);
	MACRO_LINK_STR_ID("imagefilter.gaussian.radius",RPR_CONTEXT_IMAGE_FILTER_GAUSSIAN_RADIUS);
	MACRO_LINK_STR_ID("imagefilter.triangle.radius",RPR_CONTEXT_IMAGE_FILTER_TRIANGLE_RADIUS);
	MACRO_LINK_STR_ID("imagefilter.mitchell.radius",RPR_CONTEXT_IMAGE_FILTER_MITCHELL_RADIUS);
	MACRO_LINK_STR_ID("imagefilter.lanczos.radius",RPR_CONTEXT_IMAGE_FILTER_LANCZOS_RADIUS);
	MACRO_LINK_STR_ID("imagefilter.blackmanharris.radius",RPR_CONTEXT_IMAGE_FILTER_BLACKMANHARRIS_RADIUS);
	MACRO_LINK_STR_ID("tonemapping.type",RPR_CONTEXT_TONE_MAPPING_TYPE);
	MACRO_LINK_STR_ID("tonemapping.linear.scale",RPR_CONTEXT_TONE_MAPPING_LINEAR_SCALE);
	MACRO_LINK_STR_ID("tonemapping.photolinear.sensitivity",RPR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_SENSITIVITY);
	MACRO_LINK_STR_ID("tonemapping.photolinear.exposure",RPR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_EXPOSURE);
	MACRO_LINK_STR_ID("tonemapping.photolinear.fstop",RPR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_FSTOP);
	MACRO_LINK_STR_ID("tonemapping.exponential.intensity",RPR_CONTEXT_TONE_MAPPING_EXPONENTIAL_INTENSITY);
	MACRO_LINK_STR_ID("tonemapping.reinhard02.prescale",RPR_CONTEXT_TONE_MAPPING_REINHARD02_PRE_SCALE);
	MACRO_LINK_STR_ID("tonemapping.reinhard02.postscale",RPR_CONTEXT_TONE_MAPPING_REINHARD02_POST_SCALE);
	MACRO_LINK_STR_ID("tonemapping.reinhard02.burn",RPR_CONTEXT_TONE_MAPPING_REINHARD02_BURN);
	MACRO_LINK_STR_ID("maxrecursion",RPR_CONTEXT_MAX_RECURSION);
	MACRO_LINK_STR_ID("raycastepsilon",RPR_CONTEXT_RAY_CAST_EPISLON);
	MACRO_LINK_STR_ID("aoraylength",RPR_CONTEXT_AO_RAY_LENGTH);
	MACRO_LINK_STR_ID("radianceclamp",RPR_CONTEXT_RADIANCE_CLAMP);
	MACRO_LINK_STR_ID("xflip",RPR_CONTEXT_X_FLIP);
	MACRO_LINK_STR_ID("yflip",RPR_CONTEXT_Y_FLIP);
	MACRO_LINK_STR_ID("transparentbackground",RPR_CONTEXT_TRANSPARENT_BACKGROUND);
	MACRO_LINK_STR_ID("preview",RPR_CONTEXT_PREVIEW);
	MACRO_LINK_STR_ID("framecount",RPR_CONTEXT_FRAMECOUNT);
	MACRO_LINK_STR_ID("ooctexcache",RPR_CONTEXT_OOC_TEXTURE_CACHE);
	MACRO_LINK_STR_ID("texturegamma",RPR_CONTEXT_TEXTURE_GAMMA);
	MACRO_LINK_STR_ID("displaygamma",RPR_CONTEXT_DISPLAY_GAMMA);
	MACRO_LINK_STR_ID("mipmaplodoffset",RPR_CONTEXT_MIPMAP_LOD_OFFSET);
	MACRO_LINK_STR_ID("clippingplane",RPR_CONTEXT_CLIPPING_PLANE);
	MACRO_LINK_STR_ID("stacksize",RPR_CONTEXT_MATERIAL_STACK_SIZE);
	MACRO_LINK_STR_ID("pdfthreshold",RPR_CONTEXT_PDF_THRESHOLD);
	MACRO_LINK_STR_ID("rendermode",RPR_CONTEXT_RENDER_MODE);
	MACRO_LINK_STR_ID("roughnesscap",RPR_CONTEXT_ROUGHNESS_CAP);
	MACRO_LINK_STR_ID("gpu0name",RPR_CONTEXT_GPU0_NAME);
	MACRO_LINK_STR_ID("gpu1name",RPR_CONTEXT_GPU1_NAME);
	MACRO_LINK_STR_ID("gpu2name",RPR_CONTEXT_GPU2_NAME);
	MACRO_LINK_STR_ID("gpu3name",RPR_CONTEXT_GPU3_NAME);
	MACRO_LINK_STR_ID("gpu4name",RPR_CONTEXT_GPU4_NAME);
	MACRO_LINK_STR_ID("gpu5name",RPR_CONTEXT_GPU5_NAME);
	MACRO_LINK_STR_ID("gpu6name",RPR_CONTEXT_GPU6_NAME);
	MACRO_LINK_STR_ID("gpu7name",RPR_CONTEXT_GPU7_NAME);
	MACRO_LINK_STR_ID("gpu8name",RPR_CONTEXT_GPU8_NAME);
	MACRO_LINK_STR_ID("gpu9name",RPR_CONTEXT_GPU9_NAME);
	MACRO_LINK_STR_ID("gpu10name",RPR_CONTEXT_GPU10_NAME);
	MACRO_LINK_STR_ID("gpu11name",RPR_CONTEXT_GPU11_NAME);
	MACRO_LINK_STR_ID("gpu12name",RPR_CONTEXT_GPU12_NAME);
	MACRO_LINK_STR_ID("gpu13name",RPR_CONTEXT_GPU13_NAME);
	MACRO_LINK_STR_ID("gpu14name",RPR_CONTEXT_GPU14_NAME);
	MACRO_LINK_STR_ID("gpu15name",RPR_CONTEXT_GPU15_NAME);
	MACRO_LINK_STR_ID("cpuname",RPR_CONTEXT_CPU_NAME);
	MACRO_LINK_STR_ID("texturecompression",RPR_CONTEXT_TEXTURE_COMPRESSION);
	MACRO_LINK_STR_ID("cputhreadlimit",RPR_CONTEXT_CPU_THREAD_LIMIT);
	MACRO_LINK_STR_ID("rpr_api_version",RPR_CONTEXT_API_VERSION);
	MACRO_LINK_STR_ID("rpr_api_version_minor",RPR_CONTEXT_API_VERSION_MINOR);
	MACRO_LINK_STR_ID("lasterror",RPR_CONTEXT_LAST_ERROR_MESSAGE);
	MACRO_LINK_STR_ID("maxdepth.diffuse",RPR_CONTEXT_MAX_DEPTH_DIFFUSE);
	MACRO_LINK_STR_ID("maxdepth.shadow",RPR_CONTEXT_MAX_DEPTH_SHADOW);
	MACRO_LINK_STR_ID("maxdepth.glossy",RPR_CONTEXT_MAX_DEPTH_GLOSSY);
	MACRO_LINK_STR_ID("maxdepth.refraction",RPR_CONTEXT_MAX_DEPTH_REFRACTION);
	MACRO_LINK_STR_ID("maxdepth.refraction.glossy",RPR_CONTEXT_MAX_DEPTH_GLOSSY_REFRACTION);
	MACRO_LINK_STR_ID("ooccachepath",RPR_CONTEXT_OOC_CACHE_PATH);
	MACRO_LINK_STR_ID("renderlayermask",RPR_CONTEXT_RENDER_LAYER_MASK);
	MACRO_LINK_STR_ID("singlelevelbvh",RPR_CONTEXT_SINGLE_LEVEL_BVH_ENABLED);
	MACRO_LINK_STR_ID("metalperformanceshader",RPR_CONTEXT_METAL_PERFORMANCE_SHADER);
	MACRO_LINK_STR_ID("usertexture0",RPR_CONTEXT_USER_TEXTURE_0);
	MACRO_LINK_STR_ID("usertexture1",RPR_CONTEXT_USER_TEXTURE_1);
	MACRO_LINK_STR_ID("usertexture2",RPR_CONTEXT_USER_TEXTURE_2);
	MACRO_LINK_STR_ID("usertexture3",RPR_CONTEXT_USER_TEXTURE_3);
	MACRO_LINK_STR_ID("aoraycount",RPR_CONTEXT_AO_RAY_COUNT);
	MACRO_LINK_STR_ID("samplertype",RPR_CONTEXT_SAMPLER_TYPE);
	MACRO_LINK_STR_ID("as.tilesize",RPR_CONTEXT_ADAPTIVE_SAMPLING_TILE_SIZE);
	MACRO_LINK_STR_ID("as.minspp",RPR_CONTEXT_ADAPTIVE_SAMPLING_MIN_SPP);
	MACRO_LINK_STR_ID("as.threshold",RPR_CONTEXT_ADAPTIVE_SAMPLING_THRESHOLD);
	MACRO_LINK_STR_ID("tilesize",RPR_CONTEXT_TILE_SIZE);
	MACRO_LINK_STR_ID("listcreatedcameras",RPR_CONTEXT_LIST_CREATED_CAMERAS);
	MACRO_LINK_STR_ID("listcreatedmaterialnodes",RPR_CONTEXT_LIST_CREATED_MATERIALNODES);
	MACRO_LINK_STR_ID("listcreatedlights",RPR_CONTEXT_LIST_CREATED_LIGHTS);
	MACRO_LINK_STR_ID("listcreatedshapes",RPR_CONTEXT_LIST_CREATED_SHAPES);
	MACRO_LINK_STR_ID("listcreatedposteffects",RPR_CONTEXT_LIST_CREATED_POSTEFFECTS);
	MACRO_LINK_STR_ID("listcreatedheterovolumes",RPR_CONTEXT_LIST_CREATED_HETEROVOLUMES);
	MACRO_LINK_STR_ID("listcreatedgrids",RPR_CONTEXT_LIST_CREATED_GRIDS);
	MACRO_LINK_STR_ID("listcreatedbuffers",RPR_CONTEXT_LIST_CREATED_BUFFERS);
	MACRO_LINK_STR_ID("listcreatedimages",RPR_CONTEXT_LIST_CREATED_IMAGES);
	MACRO_LINK_STR_ID("listcreatedframebuffers",RPR_CONTEXT_LIST_CREATED_FRAMEBUFFERS);
	MACRO_LINK_STR_ID("listcreatedscenes",RPR_CONTEXT_LIST_CREATED_SCENES);
	MACRO_LINK_STR_ID("listcreatedcurves",RPR_CONTEXT_LIST_CREATED_CURVES);
	MACRO_LINK_STR_ID("listcreatedmaterialsystem",RPR_CONTEXT_LIST_CREATED_MATERIALSYSTEM);
	MACRO_LINK_STR_ID("listcreatedcomposite",RPR_CONTEXT_LIST_CREATED_COMPOSITE);
	MACRO_LINK_STR_ID("listcreatedlut",RPR_CONTEXT_LIST_CREATED_LUT);
	MACRO_LINK_STR_ID("aaenabled",RPR_CONTEXT_AA_ENABLED);
	MACRO_LINK_STR_ID("activepixelcount",RPR_CONTEXT_ACTIVE_PIXEL_COUNT);
	MACRO_LINK_STR_ID("tracing",RPR_CONTEXT_TRACING_ENABLED);
	MACRO_LINK_STR_ID("tracingfolder",RPR_CONTEXT_TRACING_PATH);
	MACRO_LINK_STR_ID("tilerect",RPR_CONTEXT_TILE_RECT);
	MACRO_LINK_STR_ID("pluginversion",RPR_CONTEXT_PLUGIN_VERSION);
	MACRO_LINK_STR_ID("russianroulettedepth",RPR_CONTEXT_RUSSIAN_ROULETTE_DEPTH);





	#undef MACRO_LINK_STR_ID
	#define MACRO_LINK_STR_ID(s,i)  m_RPRMaterialType_string_to_id[s]=i;  m_RPRMaterialType_id_to_string[i]=s  ;


	MACRO_LINK_STR_ID("diffuse",RPR_MATERIAL_NODE_DIFFUSE); //0x1 
	MACRO_LINK_STR_ID("microfacet",RPR_MATERIAL_NODE_MICROFACET); //0x2 
	MACRO_LINK_STR_ID("reflection",RPR_MATERIAL_NODE_REFLECTION); //0x3 
	MACRO_LINK_STR_ID("refraction",RPR_MATERIAL_NODE_REFRACTION); //0x4 
	MACRO_LINK_STR_ID("microfacet_refraction",RPR_MATERIAL_NODE_MICROFACET_REFRACTION); //0x5 
	MACRO_LINK_STR_ID("transparent",RPR_MATERIAL_NODE_TRANSPARENT); //0x6 
	MACRO_LINK_STR_ID("emissive",RPR_MATERIAL_NODE_EMISSIVE); //0x7 
	MACRO_LINK_STR_ID("ward",RPR_MATERIAL_NODE_WARD); //0x8 
	MACRO_LINK_STR_ID("add",RPR_MATERIAL_NODE_ADD); //0x9 
	MACRO_LINK_STR_ID("blend",RPR_MATERIAL_NODE_BLEND); //0xA 
	MACRO_LINK_STR_ID("arithmetic",RPR_MATERIAL_NODE_ARITHMETIC); //0xB 
	MACRO_LINK_STR_ID("fresnel",RPR_MATERIAL_NODE_FRESNEL); //0xC 
	MACRO_LINK_STR_ID("normal_map",RPR_MATERIAL_NODE_NORMAL_MAP); //0xD 
	MACRO_LINK_STR_ID("image_texture",RPR_MATERIAL_NODE_IMAGE_TEXTURE); //0xE 
	MACRO_LINK_STR_ID("noise2d_texture",RPR_MATERIAL_NODE_NOISE2D_TEXTURE); //0xF 
	MACRO_LINK_STR_ID("dot_texture",RPR_MATERIAL_NODE_DOT_TEXTURE); //0x10 
	MACRO_LINK_STR_ID("gradient_texture",RPR_MATERIAL_NODE_GRADIENT_TEXTURE); //0x11 
	MACRO_LINK_STR_ID("checker_texture",RPR_MATERIAL_NODE_CHECKER_TEXTURE); //0x12 
	MACRO_LINK_STR_ID("constant_texture",RPR_MATERIAL_NODE_CONSTANT_TEXTURE); //0x13 
	MACRO_LINK_STR_ID("input_lookup",RPR_MATERIAL_NODE_INPUT_LOOKUP); //0x14 
	MACRO_LINK_STR_ID("blend_value",RPR_MATERIAL_NODE_BLEND_VALUE); //0x16 
	MACRO_LINK_STR_ID("passthrough",RPR_MATERIAL_NODE_PASSTHROUGH); //0x17 
	MACRO_LINK_STR_ID("orennayar",RPR_MATERIAL_NODE_ORENNAYAR); //0x18 
	MACRO_LINK_STR_ID("fresnel_schlick",RPR_MATERIAL_NODE_FRESNEL_SCHLICK); //0x19 
	MACRO_LINK_STR_ID("diffuse_refraction",RPR_MATERIAL_NODE_DIFFUSE_REFRACTION); //0x1B 
	MACRO_LINK_STR_ID("bump_map",RPR_MATERIAL_NODE_BUMP_MAP); //0x1C 
	MACRO_LINK_STR_ID("volume",RPR_MATERIAL_NODE_VOLUME); //0x1D 
	MACRO_LINK_STR_ID("microfacet_anisotropic_reflection",RPR_MATERIAL_NODE_MICROFACET_ANISOTROPIC_REFLECTION); //0x1E 
	MACRO_LINK_STR_ID("microfacet_anisotropic_refraction",RPR_MATERIAL_NODE_MICROFACET_ANISOTROPIC_REFRACTION); //0x1F 
	MACRO_LINK_STR_ID("twosided",RPR_MATERIAL_NODE_TWOSIDED); //0x20 
	MACRO_LINK_STR_ID("uv_procedural",RPR_MATERIAL_NODE_UV_PROCEDURAL); //0x21 
	MACRO_LINK_STR_ID("microfacet_beckmann",RPR_MATERIAL_NODE_MICROFACET_BECKMANN); //0x22 
	MACRO_LINK_STR_ID("phong",RPR_MATERIAL_NODE_PHONG); //0x23 
	MACRO_LINK_STR_ID("buffer_sampler",RPR_MATERIAL_NODE_BUFFER_SAMPLER); //0x24 
	MACRO_LINK_STR_ID("uv_triplanar",RPR_MATERIAL_NODE_UV_TRIPLANAR); //0x25 
	MACRO_LINK_STR_ID("ao_map",RPR_MATERIAL_NODE_AO_MAP); //0x26 
	MACRO_LINK_STR_ID("user_texture_0",RPR_MATERIAL_NODE_USER_TEXTURE_0); //0x27 
	MACRO_LINK_STR_ID("user_texture_1",RPR_MATERIAL_NODE_USER_TEXTURE_1); //0x28 
	MACRO_LINK_STR_ID("user_texture_2",RPR_MATERIAL_NODE_USER_TEXTURE_2); //0x29 
	MACRO_LINK_STR_ID("user_texture_3",RPR_MATERIAL_NODE_USER_TEXTURE_3); //0x2a 
	MACRO_LINK_STR_ID("uberv2",RPR_MATERIAL_NODE_UBERV2); //0x2b
	MACRO_LINK_STR_ID("transform",RPR_MATERIAL_NODE_TRANSFORM); //0x2c
	MACRO_LINK_STR_ID("rgb_to_hsv",RPR_MATERIAL_NODE_RGB_TO_HSV); //0x2d
	MACRO_LINK_STR_ID("hsv_to_rgb",RPR_MATERIAL_NODE_HSV_TO_RGB); //0x2e
	#undef MACRO_LINK_STR_ID

	return;
}


#define RPRTOOL_MACRO_DEF_STR_MAPPER_GETSET(t,ui)\
void RPRStringIDMapper::t ## _id_to_string(ui id, std::string& strOut)\
{\
	const auto& i = m_ ## t ## _id_to_string.find(id);\
	if ( i != m_ ## t ## _id_to_string.end() )\
	{\
		strOut = i->second;\
		return;\
	}\
	strOut = "";\
	return;\
}\
ui RPRStringIDMapper::t ## _string_to_id(const std::string& strIn)\
{\
	std::string strIn_lower = std::string(strIn);\
	std::transform(strIn_lower.begin(), strIn_lower.end(), strIn_lower.begin(), [](unsigned char c){ return std::tolower(c); });\
	const auto& i = m_ ## t ## _string_to_id.find(strIn_lower);\
	if ( i != m_ ## t ## _string_to_id.end() )\
	{\
		return i->second;\
	}\
	return (ui)-1;\
}\





RPRTOOL_MACRO_DEF_STR_MAPPER_GETSET(RPRMaterialInput,rpr_material_node_input)
RPRTOOL_MACRO_DEF_STR_MAPPER_GETSET(RPRContextInput,rpr_context_info)
RPRTOOL_MACRO_DEF_STR_MAPPER_GETSET(RPRMaterialType,rpr_material_node_type)



